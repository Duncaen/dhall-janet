(import ../parser)

(pp (parser/parse `{- foo -}`))
(pp (parser/parse `\( x : Bool ) -> x@1`))
(pp (parser/parse `\( a : y ) -> x`))
(pp (parser/parse `if a then b else c`))
(pp (parser/parse `if True then True else False`))
(pp (parser/parse `let x = True in x`))
(pp (parser/parse `let x : Annot = True in x`))
(pp (parser/parse `forall (x : a) -> b`))
(pp (parser/parse `âˆ€(x : a) â†’ b`))
(pp (parser/parse `"ABC"`))
(pp (parser/parse `"A" ++ "B"`))
(pp (parser/parse `"foo${fizz}bar"`))
(pp (parser/parse `"A${x}B${x}C"`))
(pp (parser/parse `"a\$\b\f\n\r\t\"\\a"`))
(pp (parser/parse `1`))
(pp (parser/parse `0x01`))
(pp (parser/parse `0xDEADBEEF`))
(pp (parser/parse `{- foo -}1`))
(pp (parser/parse `1{- foo -}`))
(pp (parser/parse `1{- foo -}1`))
(pp (parser/parse `{-foo-}1`))
(pp (parser/parse `{-
                    foo
                    -}1`))
(pp (parser/parse `{=}`))
(pp (parser/parse `{}`))
(pp (parser/parse `<>`))
(pp (parser/parse `<|>`))
